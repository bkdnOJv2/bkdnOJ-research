{"translation_unit": 1, "preproc_include": 2, "#include": 3, "system_lib_string": 4, "\n": 5, "using_declaration": 6, "using": 7, "namespace": 8, "identifier": 9, ";": 10, "preproc_def": 11, "#define": 12, "preproc_arg": 13, "preproc_function_def": 14, "preproc_params": 15, "(": 16, ",": 17, ")": 18, "type_definition": 19, "typedef": 20, "template_type": 21, "type_identifier": 22, "template_argument_list": 23, "<": 24, "type_descriptor": 25, "primitive_type": 26, ">": 27, "sized_type_specifier": 28, "long": 29, "template_declaration": 30, "template": 31, "template_parameter_list": 32, "type_parameter_declaration": 33, "class": 34, "function_definition": 35, "function_declarator": 36, "parameter_list": 37, "parameter_declaration": 38, "compound_statement": 39, "{": 40, "ERROR": 41, "expression_statement": 42, "conditional_expression": 43, "number_literal": 44, "?": 45, ":": 46, "unary_expression": 47, "-": 48, "}": 49, "declaration": 50, "type_qualifier": 51, "const": 52, "init_declarator": 53, "=": 54, "binary_expression": 55, "call_expression": 56, "argument_list": 57, "*": 58, "pointer_declarator": 59, "parenthesized_expression": 60, "/": 61, "assignment_expression": 62, "pointer_expression": 63, "+": 64, "return_statement": 65, "return": 66, "if_statement": 67, "if": 68, "condition_clause": 69, "+=": 70, "string_literal": 71, "\"": 72, "&": 73, "&&": 74, "escape_sequence": 75, "for_statement": 76, "for": 77, "<=": 78, "update_expression": 79, "++": 80, "!=": 81, "==": 82, "struct_specifier": 83, "struct": 84, "field_declaration_list": 85, "field_declaration": 86, "field_identifier": 87, "field_initializer_list": 88, "field_initializer": 89, "array_declarator": 90, "[": 91, "]": 92, "operator_name": 93, "operator": 94, "reference_declarator": 95, "field_expression": 96, ".": 97, "comment": 98, ">>": 99, "subscript_expression": 100, "true": 101, "false": 102, "!": 103, "continue_statement": 104, "continue": 105, "while_statement": 106, "while": 107, "break_statement": 108, "break": 109, "typename": 110, "comma_expression": 111, "-=": 112, "%": 113, "preproc_call": 114, "preproc_directive": 115, "unsigned": 116, "initializer_list": 117, "storage_class_specifier": 118, "inline": 119, "%=": 120, "preproc_ifdef": 121, "#ifdef": 122, "preproc_else": 123, "#else": 124, "#endif": 125, "cast_expression": 126, "abstract_pointer_declarator": 127, "char_literal": 128, "'": 129, "/=": 130, "--": 131, "throw_statement": 132, "throw": 133, "goto_statement": 134, "goto": 135, "statement_identifier": 136, "labeled_statement": 137, "qualified_identifier": 138, "namespace_identifier": 139, "::": 140, "<<": 141, "optional_parameter_declaration": 142, "||": 143, "template_function": 144, "else": 145, "do_statement": 146, "do": 147, "*=": 148, ">=": 149, "#ifndef": 150, "sizeof_expression": 151, "sizeof": 152, "|=": 153, "~": 154, "structured_binding_declarator": 155, "for_range_loop": 156, "placeholder_type_specifier": 157, "auto": 158, "null": 159, "compound_literal_expression": 160, ">>=": 161, "|": 162, "<<=": 163, "...": 164, "static": 165, "or": 166, "and": 167, "^": 168, "preproc_if": 169, "#if": 170, "alias_declaration": 171, "optional_type_parameter_declaration": 172, "constexpr": 173, "new": 174, "delete": 175, "noexcept": 176, "variadic_type_parameter_declaration": 177, "variadic_parameter_declaration": 178, "variadic_declarator": 179, "fold_expression": 180, "signed": 181, "->": 182, "lambda_expression": 183, "lambda_capture_specifier": 184, "abstract_function_declarator": 185, "volatile": 186, "lambda_default_capture": 187, "destructor_name": 188, "dependent_type": 189, "abstract_reference_declarator": 190, "parameter_pack_expansion": 191, "[]": 192, "nullptr": 193, "decltype": 194, "()": 195, "ref_qualifier": 196, "class_specifier": 197, "access_specifier": 198, "public": 199, "trailing_return_type": 200, "private": 201, "abstract_array_declarator": 202, "parenthesized_declarator": 203, "template_method": 204, "this": 205, "concatenated_string": 206, "preproc_elif": 207, "#elif": 208, "switch_statement": 209, "switch": 210, "case_statement": 211, "case": 212, "default": 213, "raw_string_delimiter": 214, "abstract_parenthesized_declarator": 215, "new_expression": 216, "friend_declaration": 217, "friend": 218, "register": 219, "namespace_definition": 220, "declaration_list": 221, "delete_expression": 222, "short": 223, "&=": 224, "try_statement": 225, "try": 226, "catch_clause": 227, "catch": 228, "^=": 229, "xor": 230, "not": 231, "enum_specifier": 232, "enum": 233, "enumerator_list": 234, "enumerator": 235, "base_class_clause": 236, "operator_cast": 237, "new_declarator": 238, "attribute_specifier": 239, "__attribute__": 240, "template_template_parameter_declaration": 241, "preproc_defined": 242, "defined": 243, "attribute_declaration": 244, "[[": 245, "attribute": 246, "]]": 247, "static_assert_declaration": 248, "static_assert": 249, "virtual": 250, "explicit_function_specifier": 251, "explicit": 252, "dependent_name": 253, "default_method_clause": 254, "user_defined_literal": 255, "literal_suffix": 256, "namespace_alias_definition": 257, "nested_namespace_specifier": 258, "extern": 259, "mutable": 260, "thread_local": 261, "bitfield_clause": 262, "ms_pointer_modifier": 263, "ms_restrict_modifier": 264, "protected": 265, "raw_string_literal": 266, "R\"": 267, "raw_string_content": 268, "virtual_specifier": 269, "override": 270, "init_statement": 271, "union_specifier": 272, "union": 273, "\"\"": 274, "attributed_statement": 275, "delete_method_clause": 276, "initializer_pair": 277, "field_designator": 278, "requires_clause": 279, "requires": 280, ".*": 281, "final": 282, "restrict": 283, "attributed_declarator": 284, "concept_definition": 285, "concept": 286, "requires_expression": 287, "requirement_seq": 288, "simple_requirement": 289, "constraint_conjunction": 290, "u\"": 291, "<=>": 292, "not_eq": 293, "linkage_specification": 294, "->*": 295, "subscript_designator": 296}